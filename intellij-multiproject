#!/usr/bin/env sh
# This file is part of intellij-multiproject. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/intellij-multiproject/master/COPYRIGHT. No part of intellij-multiproject, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of intellij-multiproject. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/intellij-multiproject/master/COPYRIGHT.


_program()
{
	core_usesIn core temporaryFiles compatibility
	core_usesIn intellijmultiproject iterate modules
	
	intellijmultiproject()
	{	
		intellijmultiproject_modules_prepare
		intellijmultiproject_other_findProjectOutputPath
		intellijmultiproject_modules_stripAnyExistingLibraries
		intellijmultiproject_iterate_processProjects
		intellijmultiproject_modules_moveIntoPosition
	}
}

_program_name='intellij-multiproject'
_program_namespace='intellijmultiproject'
_program_version='unversioned'
_program_package_or_build=''
_program_path="$([ "${_program_fattening_program_path+set}" = 'set' ] && printf '%s\n' "$_program_fattening_program_path" || ([ "${0%/*}" = "${0}" ] && printf '%s\n' '.' || printf '%s\n' "${0%/*}"))"
_program_libPath="${_program_path}/lib"
_program_etcPath="${_program_path}/etc"
_program_varPath="${_program_path}/var"
_program_entrypoint='intellijmultiproject'
_program_ignoreDependencies=no

# something like xmlstarlet
_program_commandLine_parseInitialise()
{
	# IntelliJ has $PROJECT_DIR$, which has subfolder '.idea', and, in our case, 'source', but this is not necessarily true
	
	_program_default_projectDir="$(pwd)"
	_program_default_libraryPath=library
}

_program_commandLine_helpMessage()
{
	_program_commandLine_helpMessage_usage="[OPTION]... -- [SCRIPTLETS]..."
	_program_commandLine_helpMessage_description="Connects to a MQTT server and runs SCRIPTLETS.
May be used as a command interpreter in scripts starting #!/usr/bin/env ${_program_name}
if on the PATH."
	_program_commandLine_helpMessage_options="
  -p, --project-dir PROJECT-DIR      Folder containing .idea project to import sub-projects into
  -l, --library-path RELATIVE-PATH   library path RELATIVE-PATH relative to PROJECT_DIR to search for projects to include, defaults to '${_program_default_libraryPath}'"
    _program_commandLine_helpMessage_optionsSpacing='   '
	_program_commandLine_helpMessage_configurationKeys="
  intellijmultiproject_projectDir       Equivalent to --project-dir
  intellijmultiproject_libraryPath      Equivalent to --library-path
"
	_program_commandLine_helpMessage_examples="
  ${_program_name} --project-dir /path/to/dir/containing/.idea --library-path library
"
}

_program_commandLine_optionExists()
{
	case "$optionName" in
		
		p|project-dir)
			echo 'yes-argumented'
		;;
		
		l|library-path)
			echo 'yes-argumented'
		;;
		
		*)
			echo 'no'
		;;
		
	esac
}

_program_commandLine_processOptionWithArgument()
{
	case "$optionName" in
		
		p|project-dir)
			core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			intellijmultiproject_projectDir="$optionValue"
		;;
		
		l|library-path)
			intellijmultiproject_libraryPath="$optionValue"
		;;
		
	esac
}

_program_commandLine_validate()
{
	if core_variable_isUnset intellijmultiproject_projectDir; then
		intellijmultiproject_projectDir="$_program_default_projectDir"
	else
		core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_CONFIG 'configuration setting' 'intellijmultiproject_projectDir' "$intellijmultiproject_projectDir"
	fi
	
	if core_variable_isUnset intellijmultiproject_libraryPath; then
		intellijmultiproject_libraryPath="$_program_default_libraryPath"
	fi
	
	# Make absolute
	pushd "$intellijmultiproject_projectDir"
		intellijmultiproject_projectDir="$(pwd)"
	popd
	
	_intellijmultiproject_ideaFolderPath="$intellijmultiproject_projectDir"/.idea
	core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_CONFIG 'combined setting' 'resolved _intellijmultiproject_ideaFolderPath' "$_intellijmultiproject_ideaFolderPath"
	
	_intellijmultiproject_libraryAbsoluteFolderPath="$intellijmultiproject_projectDir"/"$intellijmultiproject_libraryPath"
	core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_CONFIG 'combined setting' 'resolved intellijmultiproject_libraryPath' "$_intellijmultiproject_libraryAbsoluteFolderPath"
	
	_intellijmultiproject_modules_originalFilePath="$_intellijmultiproject_ideaFolderPath"/modules.xml
	core_validate_filePathReadable $core_commandLine_exitCode_CONFIG 'combined setting' 'project .idea/modules.xml' "$_intellijmultiproject_modules_originalFilePath"
}

# Assumes pwd, and so requires this code to be running from this folder
. "$_program_libPath"/shellfire/core/init.functions "$@"
